const fs = require("fs")
const path = require("path")
const { execSync } = require("child_process")

console.log("üöÄ Configurando Casa Monarca App...\n")

// Check if .env.local exists
const envPath = path.join(process.cwd(), ".env.local")
if (!fs.existsSync(envPath)) {
  console.log("üìù Creando archivo .env.local...")
  const envExample = path.join(process.cwd(), ".env.example")
  if (fs.existsSync(envExample)) {
    fs.copyFileSync(envExample, envPath)
    console.log("‚úÖ Archivo .env.local creado desde .env.example")
    console.log("‚ö†Ô∏è  IMPORTANTE: Edita .env.local con tus configuraciones de Supabase\n")
  } else {
    console.log("‚ùå No se encontr√≥ .env.example")
  }
}

// Check Node.js version
const nodeVersion = process.version
const majorVersion = Number.parseInt(nodeVersion.slice(1).split(".")[0])
if (majorVersion < 18) {
  console.log("‚ùå Node.js 18+ es requerido. Versi√≥n actual:", nodeVersion)
  process.exit(1)
}
console.log("‚úÖ Node.js version:", nodeVersion)

// Install dependencies if node_modules doesn't exist
if (!fs.existsSync(path.join(process.cwd(), "node_modules"))) {
  console.log("üì¶ Instalando dependencias...")
  try {
    execSync("npm install", { stdio: "inherit" })
    console.log("‚úÖ Dependencias instaladas")
  } catch (error) {
    console.log("‚ùå Error instalando dependencias:", error.message)
    process.exit(1)
  }
} else {
  console.log("‚úÖ Dependencias ya instaladas")
}

console.log("\nüéâ Setup completado!")
console.log("\nüìã Pr√≥ximos pasos:")
console.log("1. Edita .env.local con tus configuraciones de Supabase")
console.log("2. Ejecuta los scripts SQL en Supabase Dashboard")
console.log("3. Configura Storage buckets en Supabase")
console.log("4. Ejecuta: npm run dev")
console.log("\nüìö Ver README.md para instrucciones detalladas")
